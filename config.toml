# SPDX-License-Identifier: Unlicense

# NB: you can have per-project `.helix/config.toml` files
# for, say, per-project theme preferences
# (also `languages.toml`, but that’s less interesting)

# theme = "monokai_pro_machine"
# theme = "dark_plus"
# theme = "hex_lavender"
theme = "snazzy"

[editor]
auto-format = false

[editor.soft-wrap]
enable = true
wrap-indicator = ""

[keys.normal]

C-s = ":write"

R = ["kill_to_line_end", "insert_mode"] # I miss vim’s R

C-p = [ # mnemonic: “puff”
  "open_above",
  "normal_mode",
  "insert_newline",
  "insert_mode",
]

###
### Disabled questionable/moved ideas
###

A-C = "no_op"

# Case twiddling
# "~" = "no_op"
# "`" = "no_op"
"A-`" = "no_op"

# Paging
C-b = "no_op"
C-u = "no_op"

# No-yank deleting
A-d = "no_op"
A-c = "no_op"

# f/t/F/T are getting totally dropped
F = "no_op"

###
### Emergency function bindings
###

# (C-1 through C-0 are free)

###
### By-word movement
###

# Make sure these are kept in sync with their `extend_…` counterparts in [keys.select]

w = "move_prev_sub_word_start"
e = "move_next_sub_word_end"

W = "move_prev_sub_word_end"
E = "move_next_sub_word_start"

s = "move_prev_word_start"
d = "move_next_word_end"

S = "move_prev_word_end"
D = "move_next_word_start"

x = "move_prev_long_word_start"
c = "move_next_long_word_end"

X = "move_prev_long_word_end"
C = "move_next_long_word_start"

## Bumped by by-word movement
##

"`" = "select_regex"
"~" = "split_selection"

f =   "delete_selection" # mnemonic: “fling” (or: “f— it”)
A-f = "delete_selection_noyank"
M =   "change_selection" # mnemonic: “munge”
A-M = "change_selection_noyank"

b = "extend_line_below"     # mnemonic: “below”
B = "extend_to_line_bounds" # (select entire line)

C-9 = "copy_selection_on_prev_line"
C-0 = "copy_selection_on_next_line"

###
### Cursor movement
###

i = "move_visual_line_up"
j = "move_char_left"
k = "move_visual_line_down"
l = "move_char_right"

## Bumped by cursor movement
##

t = "insert_mode"          # mnemonic: “type”
T = "insert_at_line_start" # mnemonic: like i/I

h = "no_op"
H = "no_op"
I = "no_op"

###
### Page up/page down
###

C-e = "page_cursor_half_up"
C-r = "page_cursor_half_down"

C-d = "page_cursor_up"
C-f = "page_cursor_down"

C-c = "page_up"
C-v = "page_down"

###
### Jumplist
###

C-o = "no_op"
C-8 = "save_selection"
C-i = "jump_backward"
C-k = "jump_forward"
# ␣j opens the jumplist picker still

[keys.select] # “v” mode

f = "delete_selection"
M = "change_selection" # mnemonic: “munge”

###
### By-word selection
###

w = "extend_prev_sub_word_start"
e = "extend_next_sub_word_end"

W = "extend_prev_sub_word_end"
E = "extend_next_sub_word_start"

s = "extend_prev_word_start"
d = "extend_next_word_end"

S = "extend_prev_word_end"
D = "extend_next_word_start"

x = "extend_prev_long_word_start"
c = "extend_next_long_word_end"

X = "extend_prev_long_word_end"
C = "extend_next_long_word_start"

###
### By-character and -line selection
###

i = "extend_visual_line_up"
j = "extend_char_left"
k = "extend_visual_line_down"
l = "extend_char_right"

[keys.normal.space]
A-c = "no_op"
C-c = "toggle_line_comments"

[keys.normal."+"]

# If pressing Alt in normal mode is too annoying…
s     = "split_selection_on_newline"
minus = "merge_selections"
_     = "merge_consecutive_selections"
","   = "remove_primary_selection"
";"   = "flip_selections"       # ???
x     = "shrink_to_line_bounds" # ???

# Miscellaneous
w = ":toggle whitespace.render all"
W = ":toggle whitespace.render none"

q = ":pipe quote-educator" # https://github.com/adiabatic/quote-educator

d = ":insert-output sh -c \"       date '+%%F'           | tr -d '\\n' \""
D = ":insert-output sh -c \"TZ=UTC date '+%%FT%%TZ'      | tr -d '\\n' \""
m = ":insert-output sh -c \"       date '+%%B %%-d, %%Y' | tr -d '\\n' \"" # mnemonic: ’murrca

u = ":insert-output sh -c \"uuidgen | tr A-Z a-z         | tr -d '\\n' \""

[keys.normal.g] # the `g` picker

k = "no_op"
h = "no_op"
j = "goto_line_start"
l = "goto_line_end"
";" = "goto_line_end_newline"
z = "goto_file_end"

[keys.select.g] # in “v” mode, the `g` picker

k = "no_op"
h = "no_op"
j = "extend_to_line_start"
l = "extend_to_line_end"
";" = "extend_to_line_end_newline"
z = "extend_to_file_end"

[keys.normal."C-w"]

h =   "no_op"
C-h = "no_op"
H =   "no_op"

i =   "jump_view_up"
C-i = "jump_view_up"
I =   "swap_view_up"

j =   "jump_view_left"
C-j = "jump_view_left"
J =   "swap_view_left"

k =   "jump_view_down"
C-k = "jump_view_down"
K =   "swap_view_down"

l =   "jump_view_right"
C-l = "jump_view_right"
L =   "swap_view_right"

[keys.insert]
C-a = "goto_line_start"
C-e = "goto_line_end_newline"
